// Auto-generated Objective-C++ bridge
// DO NOT EDIT MANUALLY - Generated by tools/generate_bindings.py

#import "NimBridge.h"
#include "nim_functions.h"

@implementation NimBridge

RCT_EXPORT_MODULE()

+ (BOOL)requiresMainQueueSetup
{
    return NO;
}

- (instancetype)init
{
    self = [super init];
    if (self) {
        // Initialize Nim runtime
        NimMain();
        mobileNimInit();
    }
    return self;
}

- (void)dealloc
{
    mobileNimShutdown();
}

// Generated method exports
RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSString *, helloWorld)
{
    NCSTRING result = helloWorld();
    return result ? [NSString stringWithUTF8String:result] : @"";
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSNumber *, addNumbers:(nonnull NSNumber *)a withB:(nonnull NSNumber *)b)
{
    int result = addNumbers([a intValue], [b intValue]);
    return @(result);
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSString *, getSystemInfo)
{
    NCSTRING result = getSystemInfo();
    NSString *objcString = result ? [NSString stringWithUTF8String:result] : @"";
    if (result) freeString(result);
    return objcString;
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSNumber *, mobileFibonacci:(nonnull NSNumber *)n)
{
    int result = mobileFibonacci([n intValue]);
    return @(result);
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSNumber *, mobileIsPrime:(nonnull NSNumber *)n)
{
    int result = mobileIsPrime([n intValue]);
    return @(result);
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSString *, mobileFactorize:(nonnull NSNumber *)n)
{
    NCSTRING result = mobileFactorize([n intValue]);
    NSString *objcString = result ? [NSString stringWithUTF8String:result] : @"";
    if (result) freeString(result);
    return objcString;
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSString *, mobileCreateUser:(nonnull NSNumber *)id withName:(nonnull NSString *)name withEmail:(nonnull NSString *)email)
{
    NCSTRING result = mobileCreateUser([id intValue], (NCSTRING)[name UTF8String], (NCSTRING)[email UTF8String]);
    NSString *objcString = result ? [NSString stringWithUTF8String:result] : @"";
    if (result) freeString(result);
    return objcString;
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSNumber *, mobileValidateEmail:(nonnull NSString *)email)
{
    int result = mobileValidateEmail((NCSTRING)[email UTF8String]);
    return @(result);
}

RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSString *, getNimCoreVersion)
{
    NCSTRING result = getNimCoreVersion();
    return result ? [NSString stringWithUTF8String:result] : @"";
}

@end
