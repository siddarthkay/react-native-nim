cmake_minimum_required(VERSION 3.13)
project(NimBridge)

set(PACKAGE_NAME "nim_functions")

# Include Nim compiled C files (generated by Nim compiler)
file(GLOB_RECURSE NIM_C_FILES "../../../../../../nim/cache_android/*.c")

add_library(
        ${PACKAGE_NAME}
        SHARED
        NimBridge.cpp
        nim_functions.h
        nimbase.h
        ${NIM_C_FILES}
)

# Include directories
target_include_directories(
        ${PACKAGE_NAME}
        PRIVATE
        .
        "../../../../../../nim/cache_android"
        "../../../../../../nim"
)

# Compiler flags for Nim - set NIM_INTBITS based on target architecture
if(ANDROID_ABI STREQUAL "arm64-v8a" OR ANDROID_ABI STREQUAL "x86_64")
    target_compile_definitions(${PACKAGE_NAME} PRIVATE 
        -D_GNU_SOURCE
        -DNIM_INTBITS=64
    )
else()
    # 32-bit architectures (armeabi-v7a, x86)
    target_compile_definitions(${PACKAGE_NAME} PRIVATE 
        -D_GNU_SOURCE
        -DNIM_INTBITS=32
    )
endif()

# Additional compiler flags to handle Nim code properly
target_compile_options(${PACKAGE_NAME} PRIVATE
    -Wno-unused-function
    -Wno-unused-variable
    -fno-strict-aliasing
)

# Link libraries
target_link_libraries(
        ${PACKAGE_NAME}
        android
        log
        m
        atomic
)