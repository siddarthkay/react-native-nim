"""
Base code generator class for all platform-specific generators.
"""

from typing import List

from ..models import NimFunction, TypeMapper
from ..config import GeneratorConfig


class CodeGenerator:
    """Base class for code generators."""

    def __init__(self, functions: List[NimFunction], config: GeneratorConfig):
        self.functions = functions
        self.config = config
        self.type_mapper = TypeMapper(config)

    def generate(self) -> str:
        """Generate code for the target platform."""
        raise NotImplementedError

    @staticmethod
    def _generate_header(description: str) -> str:
        """Generate standardized file header."""
        return f"""// Auto-generated {description}
// DO NOT EDIT MANUALLY - Generated by tools/generate_bindings.py
// This file will be overwritten when bindings are regenerated

"""