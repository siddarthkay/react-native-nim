/* Generated by Nim Compiler v2.2.0 */
/* Compiled for: iOS, arm64, clang */
/* Command for C compiler:
   clang++ -c -std=gnu++17 -funsigned-char  -pthread -fPIC  -O3 -fno-ident  -fPIC  -I/opt/homebrew/Cellar/nim/2.2.0/nim/lib -I/Users/siddarthkumar/code/siddarthkay/react-native-nim/nim-core/src -o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@sstd@soserrors.nim.cpp.o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@sstd@soserrors.nim.cpp */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#include <errno.h>
#include <string.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct NimStrPayload;
struct NimStringV2;
struct tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g;
struct tyObject_CatchableError__efF41ryIKUEBXF9csvj8HfA;
struct Exception;
struct RootObj;
struct TNimTypeV2;
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ;
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ_Content;
struct tyObject_RefHeader__9aS4IqkAFGaYlutBChu3r9cw;
struct tyObject_StackTraceEntry__XJPlpMU9cDRJgRZvaiJYQVA;
struct NimStrPayload {
	NI cap;
	NIM_CHAR data[SEQ_DECL_SIZE];
};
struct NimStringV2 {
	NI len;
	NimStrPayload* p;
};
struct TNimTypeV2 {
	void* destructor;
	NI size;
	NI16 align;
	NI16 depth;
	NU32* display;
	void* traceImpl;
	void* typeInfoV1;
	NI flags;
	void** vTable;
};
struct RootObj {
	TNimTypeV2* m_type;
};
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ {
  NI len; tySequence__U3NvoVpKEobw8JVQGjnwkQ_Content* p;
};
struct Exception : public RootObj {
	Exception* parent;
	NCSTRING name;
	NimStringV2 message;
	tySequence__U3NvoVpKEobw8JVQGjnwkQ trace;
	Exception* up;
};
struct tyObject_CatchableError__efF41ryIKUEBXF9csvj8HfA : public Exception {
};
struct tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g : public tyObject_CatchableError__efF41ryIKUEBXF9csvj8HfA {
	NI32 errorCode;
};
struct tyObject_RefHeader__9aS4IqkAFGaYlutBChu3r9cw {
	NI rc;
};
struct tyObject_StackTraceEntry__XJPlpMU9cDRJgRZvaiJYQVA {
	NCSTRING procname;
	NI line;
	NCSTRING filename;
};
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ_Content { NI cap; tyObject_StackTraceEntry__XJPlpMU9cDRJgRZvaiJYQVA data[SEQ_DECL_SIZE]; };
N_LIB_PRIVATE N_NOINLINE(tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g*, newOSError__stdZoserrors_u47)(NI32 errorCode_p0, NimStringV2 additionalInfo_p1);
N_LIB_PRIVATE N_NIMCALL(void*, nimNewObj)(NI size_p0, NI alignment_p1);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, osErrorMsg__stdZoserrors_u13)(NI32 errorCode_p0);
N_LIB_PRIVATE N_NIMCALL(void, eqsink___system_u2615)(NimStringV2& dest_p0, NimStringV2 src_p1);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, cstrToNimstr)(NCSTRING str_p0);
static N_INLINE(NIM_CHAR*, X5BX5D___system_u7235)(NimStringV2& s_p0, NI i_p1);
static N_INLINE(void, nimPrepareStrMutationV2)(NimStringV2& s_p0);
N_LIB_PRIVATE N_NIMCALL(void, nimPrepareStrMutationImpl__system_u2372)(NimStringV2& s_p0);
static N_INLINE(NIM_BOOL, nimSubInt)(NI a_p0, NI b_p1, NI* res_p2);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError2)(NI i_p0, NI n_p1);
static N_INLINE(void, nimAddCharV1)(NimStringV2& s_p0, NIM_CHAR c_p1);
N_LIB_PRIVATE N_NIMCALL(void, prepareAdd)(NimStringV2& s_p0, NI addLen_p1);
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2);
static N_INLINE(void, appendString)(NimStringV2& dest_p0, NimStringV2 src_p1);
static N_INLINE(void, copyMem__system_u1726)(void* dest_p0, void* source_p1, NI size_p2);
static N_INLINE(void, nimCopyMem)(void* dest_p0, void* source_p1, NI size_p2);
N_LIB_PRIVATE N_NOINLINE(void, raiseRangeErrorI)(NI64 i_p0, NI64 a_p1, NI64 b_p2);
N_LIB_PRIVATE N_NIMCALL(void, raiseExceptionEx)(Exception* e_p0, NCSTRING ename_p1, NCSTRING procname_p2, NCSTRING filename_p3, NI line_p4);
static N_INLINE(NIM_BOOL, nimDecRefIsLast)(void* p_p0);
static N_INLINE(NI, minuspercent___system_u807)(NI x_p0, NI y_p1);
N_LIB_PRIVATE N_NIMCALL(void, nimDestroyAndDispose)(void* p_p0);
extern TNimTypeV2 NTIv2__CKXa9cdChIXJmtT9b9aFBEC1g_;
static const struct {
  NI cap; NIM_CHAR data[0+1];
} TM__1nRK0qvLEFLABF9aZnNtAXQ_2 = { 0 | NIM_STRLIT_FLAG, "" };
static const NimStringV2 TM__1nRK0qvLEFLABF9aZnNtAXQ_3 = {0, (NimStrPayload*)&TM__1nRK0qvLEFLABF9aZnNtAXQ_2};
static const struct {
  NI cap; NIM_CHAR data[17+1];
} TM__1nRK0qvLEFLABF9aZnNtAXQ_6 = { 17 | NIM_STRLIT_FLAG, "Additional info: " };
static const NimStringV2 TM__1nRK0qvLEFLABF9aZnNtAXQ_7 = {17, (NimStrPayload*)&TM__1nRK0qvLEFLABF9aZnNtAXQ_6};
static const struct {
  NI cap; NIM_CHAR data[16+1];
} TM__1nRK0qvLEFLABF9aZnNtAXQ_10 = { 16 | NIM_STRLIT_FLAG, "unknown OS error" };
static const NimStringV2 TM__1nRK0qvLEFLABF9aZnNtAXQ_11 = {16, (NimStrPayload*)&TM__1nRK0qvLEFLABF9aZnNtAXQ_10};
N_LIB_PRIVATE N_NIMCALL(NI32, osLastError__stdZoserrors_u99)(void) {
	NI32 result;
	result = errno;
	return result;
}
N_LIB_PRIVATE N_NIMCALL(NimStringV2, osErrorMsg__stdZoserrors_u13)(NI32 errorCode_p0) {
	NimStringV2 result;
	result = TM__1nRK0qvLEFLABF9aZnNtAXQ_3;
	{
		NimStringV2 T6_;
		if (!!((errorCode_p0 == ((NI32)0)))) goto LA3_;
{		auto T5_ = strerror(errorCode_p0);
		T6_.len = 0; T6_.p = NIM_NIL;
		T6_ = cstrToNimstr((NCSTRING) T5_);
		eqsink___system_u2615((*(&result)), T6_);
}	}
LA3_: ;
	return result;
}
static N_INLINE(void, nimPrepareStrMutationV2)(NimStringV2& s_p0) {
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = !((s_p0.p == ((NimStrPayload*) NIM_NIL)));
		if (!(T3_)) goto LA4_;
		T3_ = ((NI)((*s_p0.p).cap & ((NI)IL64(4611686018427387904))) == ((NI)IL64(4611686018427387904)));
LA4_: ;
		if (!T3_) goto LA5_;
{		nimPrepareStrMutationImpl__system_u2372((*(&s_p0)));
}	}
LA5_: ;
}
static N_INLINE(NIM_BOOL, nimSubInt)(NI a_p0, NI b_p1, NI* res_p2) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	NI r = ((NI) ((NU)((NU64)(((NU) (a_p0))) - (NU64)(((NU) (b_p1))))));
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (((NI)0) <= (NI)(r ^ a_p0));
		if (T3_) goto LA4_;
		T3_ = (((NI)0) <= (NI)(r ^ (NI)((NU64) ~(b_p1))));
LA4_: ;
		if (!T3_) goto LA5_;
{		(*res_p2) = r;
}	}
	goto LA1_;
LA5_: ;
	{
		result = NIM_TRUE;
	}
LA1_: ;
	return result;
}
static N_INLINE(NIM_CHAR*, X5BX5D___system_u7235)(NimStringV2& s_p0, NI i_p1) {
	NIM_CHAR* result;
	NI TM__1nRK0qvLEFLABF9aZnNtAXQ_4;
	nimPrepareStrMutationV2(s_p0);
	if (nimSubInt(s_p0.len, i_p1, &TM__1nRK0qvLEFLABF9aZnNtAXQ_4)) { raiseOverflow(); 	};
	if ((NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_4) < 0 || (NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_4) >= s_p0.len){ raiseIndexError2((NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_4),s_p0.len-1); 	}
	result = (&s_p0.p->data[(NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_4)]);
	return result;
}
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	NI r = ((NI) ((NU)((NU64)(((NU) (a_p0))) + (NU64)(((NU) (b_p1))))));
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (((NI)0) <= (NI)(r ^ a_p0));
		if (T3_) goto LA4_;
		T3_ = (((NI)0) <= (NI)(r ^ b_p1));
LA4_: ;
		if (!T3_) goto LA5_;
{		(*res_p2) = r;
}	}
	goto LA1_;
LA5_: ;
	{
		result = NIM_TRUE;
	}
LA1_: ;
	return result;
}
static N_INLINE(void, nimAddCharV1)(NimStringV2& s_p0, NIM_CHAR c_p1) {
	NI TM__1nRK0qvLEFLABF9aZnNtAXQ_5;
	prepareAdd((*(&s_p0)), ((NI)1));
	(*s_p0.p).data[s_p0.len] = c_p1;
	if (nimAddInt(s_p0.len, ((NI)1), &TM__1nRK0qvLEFLABF9aZnNtAXQ_5)) { raiseOverflow(); 	};
	s_p0.len = (NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_5);
	(*s_p0.p).data[s_p0.len] = 0;
}
static N_INLINE(void, nimCopyMem)(void* dest_p0, void* source_p1, NI size_p2) {
	auto T1_ = memcpy(dest_p0, source_p1, ((size_t) (size_p2)));
}
static N_INLINE(void, copyMem__system_u1726)(void* dest_p0, void* source_p1, NI size_p2) {
	nimCopyMem(dest_p0, source_p1, size_p2);
}
static N_INLINE(void, appendString)(NimStringV2& dest_p0, NimStringV2 src_p1) {
	{
		NI TM__1nRK0qvLEFLABF9aZnNtAXQ_8;
		NI TM__1nRK0qvLEFLABF9aZnNtAXQ_9;
		if (!(((NI)0) < src_p1.len)) goto LA3_;
{		if (nimAddInt(src_p1.len, ((NI)1), &TM__1nRK0qvLEFLABF9aZnNtAXQ_8)) { raiseOverflow(); 		};
		if (((NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_8)) < ((NI)0) || ((NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_8)) > ((NI)IL64(9223372036854775807))){ raiseRangeErrorI((NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_8), ((NI)0), ((NI)IL64(9223372036854775807))); 		}
		copyMem__system_u1726(((void*) ((&(*dest_p0.p).data[dest_p0.len]))), ((void*) ((&(*src_p1.p).data[((NI)0)]))), ((NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_8)));
		if (nimAddInt(dest_p0.len, src_p1.len, &TM__1nRK0qvLEFLABF9aZnNtAXQ_9)) { raiseOverflow(); 		};
		dest_p0.len = (NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_9);
}	}
LA3_: ;
}
N_LIB_PRIVATE N_NOINLINE(tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g*, newOSError__stdZoserrors_u47)(NI32 errorCode_p0, NimStringV2 additionalInfo_p1) {
	tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g* result;
	NI32 colontmpD_;
	tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g* T1_;
	result = NIM_NIL;
	colontmpD_ = (NI32)0;
	T1_ = NIM_NIL;
	T1_ = (tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g*) nimNewObj(sizeof(tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g), NIM_ALIGNOF(tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g));
	(*T1_).m_type = (&NTIv2__CKXa9cdChIXJmtT9b9aFBEC1g_);
	(*T1_).name = "OSError";
	colontmpD_ = errorCode_p0;
	(*T1_).errorCode = colontmpD_;
	(*T1_).message = osErrorMsg__stdZoserrors_u13(errorCode_p0);
	result = T1_;
	{
		if (!(((NI)0) < additionalInfo_p1.len)) goto LA4_;
{		{
			NIM_BOOL T8_;
			NIM_CHAR* T10_;
			T8_ = (NIM_BOOL)0;
			T8_ = (((NI)0) < (*result).message.len);
			if (!(T8_)) goto LA9_;
			T10_ = (NIM_CHAR*)0;
			T10_ = X5BX5D___system_u7235((*(&(*result).message)), ((NI)1));
			T8_ = !(((NU8)((*T10_)) == (NU8)(10)));
LA9_: ;
			if (!T8_) goto LA11_;
{			nimAddCharV1((*result).message, 10);
}		}
LA11_: ;
		prepareAdd((*result).message, 17);
appendString((*result).message, TM__1nRK0qvLEFLABF9aZnNtAXQ_7);
		prepareAdd((*result).message, additionalInfo_p1.len + 0);
appendString((*result).message, additionalInfo_p1);
}	}
LA4_: ;
	{
		if (!((*result).message.len == 0)) goto LA15_;
{		eqsink___system_u2615((*(&(*result).message)), TM__1nRK0qvLEFLABF9aZnNtAXQ_11);
}	}
LA15_: ;
	return result;
}
N_LIB_PRIVATE N_NOINLINE(void, raiseOSError__stdZoserrors_u96)(NI32 errorCode_p0, NimStringV2 additionalInfo_p1) {
	auto T1_ = newOSError__stdZoserrors_u47(errorCode_p0, additionalInfo_p1);
	raiseExceptionEx((Exception*)T1_, "OSError", "raiseOSError", "oserrors.nim", 92);
}
N_LIB_PRIVATE N_NIMCALL(void, eqwasMoved___stdZoserrors_u80)(tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g*& dest_p0) {
	dest_p0 = 0;
}
static N_INLINE(NI, minuspercent___system_u807)(NI x_p0, NI y_p1) {
	NI result;
	result = ((NI) ((NU)((NU64)(((NU) (x_p0))) - (NU64)(((NU) (y_p1))))));
	return result;
}
static N_INLINE(NIM_BOOL, nimDecRefIsLast)(void* p_p0) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	{
		if (!!((p_p0 == NIM_NIL))) goto LA3_;
{		auto T5_ = minuspercent___system_u807(((NI) (ptrdiff_t) (p_p0)), ((NI)8));
		tyObject_RefHeader__9aS4IqkAFGaYlutBChu3r9cw* cell = ((tyObject_RefHeader__9aS4IqkAFGaYlutBChu3r9cw*) (T5_));
		{
			if (!((NI)((NI64)((*cell).rc) >> (NU64)(((NI)3))) == ((NI)0))) goto LA8_;
{			result = NIM_TRUE;
}		}
		goto LA6_;
LA8_: ;
		{
			NI TM__1nRK0qvLEFLABF9aZnNtAXQ_12;
			if (nimSubInt((*cell).rc, ((NI)8), &TM__1nRK0qvLEFLABF9aZnNtAXQ_12)) { raiseOverflow(); 			};
			(*cell).rc = (NI)(TM__1nRK0qvLEFLABF9aZnNtAXQ_12);
		}
LA6_: ;
}	}
LA3_: ;
	return result;
}
N_LIB_PRIVATE N_NIMCALL(void, eqdestroy___stdZoserrors_u83)(tyObject_OSError__CKXa9cdChIXJmtT9b9aFBEC1g* dest_p0) {
	{
		auto T3_ = nimDecRefIsLast(dest_p0);
		if (!T3_) goto LA4_;
{		nimDestroyAndDispose(dest_p0);
}	}
LA4_: ;
}
