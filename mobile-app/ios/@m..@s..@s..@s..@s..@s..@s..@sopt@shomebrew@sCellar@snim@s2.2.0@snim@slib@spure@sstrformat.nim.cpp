/* Generated by Nim Compiler v2.2.0 */
/* Compiled for: iOS, arm64, clang */
/* Command for C compiler:
   clang++ -c -std=gnu++17 -funsigned-char  -pthread -fPIC  -O3 -fno-ident  -fPIC  -I/opt/homebrew/Cellar/nim/2.2.0/nim/lib -I/Users/siddarthkumar/code/siddarthkay/react-native-nim/nim-core/src -o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@spure@sstrformat.nim.cpp.o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@spure@sstrformat.nim.cpp */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#include <string.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct NimStrPayload;
struct NimStringV2;
struct NimStrPayload {
	NI cap;
	NIM_CHAR data[SEQ_DECL_SIZE];
};
struct NimStringV2 {
	NI len;
	NimStrPayload* p;
};
typedef NU8 tyEnum_JsonValueKind__xMfZbK4rL9bzqYowFMHElsg;
typedef NU8 tyEnum_ExpectedTokenCategory__53bzMm2xvlHkXC5lwfZCWQ;
N_LIB_PRIVATE N_NIMCALL(NimStringV2, alignString__pureZstrformat_u20)(NimStringV2 s_p0, NI minimumWidth_p1, NIM_CHAR align_p2, NIM_CHAR fill_p3);
N_LIB_PRIVATE N_NIMCALL(void, eqcopy___system_u2609)(NimStringV2& dest_p0, NimStringV2 src_p1);
static N_INLINE(NI, validateUtf8__pureZunicode_u7517)(NimStringV2 s_p0);
N_LIB_PRIVATE N_NIMCALL(NI, validateUtf8__pureZunicode_u336)(NIM_CHAR* s_p0, NI s_p0Len_0);
N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError4)(NI l1_p0, NI h1_p1, NI h2_p2);
static N_INLINE(NI, runeLen__pureZunicode_u7345)(NimStringV2 s_p0);
N_LIB_PRIVATE N_NIMCALL(NI, nucruneLen)(NIM_CHAR* s_p0, NI s_p0Len_0);
static N_INLINE(NIM_BOOL, nimSubInt)(NI a_p0, NI b_p1, NI* res_p2);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
static N_INLINE(void, appendString)(NimStringV2& dest_p0, NimStringV2 src_p1);
static N_INLINE(void, copyMem__system_u1726)(void* dest_p0, void* source_p1, NI size_p2);
static N_INLINE(void, nimCopyMem)(void* dest_p0, void* source_p1, NI size_p2);
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2);
N_LIB_PRIVATE N_NOINLINE(void, raiseRangeErrorI)(NI64 i_p0, NI64 a_p1, NI64 b_p2);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, nsuRepeatChar)(NIM_CHAR c_p0, NI count_p1);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, rawNewString)(NI space_p0);
N_LIB_PRIVATE N_NOCONV(void, deallocShared)(void* p_p0);
N_LIB_PRIVATE N_NIMCALL(void, prepareAdd)(NimStringV2& s_p0, NI addLen_p1);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, dollar___systemZdollars_u8)(NI x_p0);
N_LIB_PRIVATE N_NIMCALL(void, formatValue__apiZcore_u28)(NimStringV2& result_p0, NimStringV2 value_p1);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, dollar___pkgZjson95serializationZtypes_u52)(tyEnum_JsonValueKind__xMfZbK4rL9bzqYowFMHElsg e_p0);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, dollar___pkgZjson95serializationZreader95desc_u37)(tyEnum_ExpectedTokenCategory__53bzMm2xvlHkXC5lwfZCWQ e_p0);
static N_INLINE(NI, validateUtf8__pureZunicode_u7517)(NimStringV2 s_p0) {
	NI result;
	result = (NI)0;
	if ((s_p0.len-1)-((NI)0) != -1 && (((NI)0) < 0 || ((NI)0) >= s_p0.len || (s_p0.len-1) < 0 || (s_p0.len-1) >= s_p0.len)){ raiseIndexError4(((NI)0), (s_p0.len-1), s_p0.len); 	}
	result = validateUtf8__pureZunicode_u336((((s_p0).p) ? ((NIM_CHAR*)s_p0.p->data+(((NI)0))) : NIM_NIL), ((s_p0.len-1))-(((NI)0))+1);
	return result;
}
static N_INLINE(NI, runeLen__pureZunicode_u7345)(NimStringV2 s_p0) {
	NI result;
	result = (NI)0;
	if ((s_p0.len-1)-((NI)0) != -1 && (((NI)0) < 0 || ((NI)0) >= s_p0.len || (s_p0.len-1) < 0 || (s_p0.len-1) >= s_p0.len)){ raiseIndexError4(((NI)0), (s_p0.len-1), s_p0.len); 	}
	result = nucruneLen((((s_p0).p) ? ((NIM_CHAR*)s_p0.p->data+(((NI)0))) : NIM_NIL), ((s_p0.len-1))-(((NI)0))+1);
	return result;
}
static N_INLINE(NIM_BOOL, nimSubInt)(NI a_p0, NI b_p1, NI* res_p2) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	NI r = ((NI) ((NU)((NU64)(((NU) (a_p0))) - (NU64)(((NU) (b_p1))))));
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (((NI)0) <= (NI)(r ^ a_p0));
		if (T3_) goto LA4_;
		T3_ = (((NI)0) <= (NI)(r ^ (NI)((NU64) ~(b_p1))));
LA4_: ;
		if (!T3_) goto LA5_;
{		(*res_p2) = r;
}	}
	goto LA1_;
LA5_: ;
	{
		result = NIM_TRUE;
	}
LA1_: ;
	return result;
}
static N_INLINE(void, nimCopyMem)(void* dest_p0, void* source_p1, NI size_p2) {
	auto T1_ = memcpy(dest_p0, source_p1, ((size_t) (size_p2)));
}
static N_INLINE(void, copyMem__system_u1726)(void* dest_p0, void* source_p1, NI size_p2) {
	nimCopyMem(dest_p0, source_p1, size_p2);
}
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	NI r = ((NI) ((NU)((NU64)(((NU) (a_p0))) + (NU64)(((NU) (b_p1))))));
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (((NI)0) <= (NI)(r ^ a_p0));
		if (T3_) goto LA4_;
		T3_ = (((NI)0) <= (NI)(r ^ b_p1));
LA4_: ;
		if (!T3_) goto LA5_;
{		(*res_p2) = r;
}	}
	goto LA1_;
LA5_: ;
	{
		result = NIM_TRUE;
	}
LA1_: ;
	return result;
}
static N_INLINE(void, appendString)(NimStringV2& dest_p0, NimStringV2 src_p1) {
	{
		NI TM__qDXzsifTQdn8ucTam9cFp4w_3;
		NI TM__qDXzsifTQdn8ucTam9cFp4w_4;
		if (!(((NI)0) < src_p1.len)) goto LA3_;
{		if (nimAddInt(src_p1.len, ((NI)1), &TM__qDXzsifTQdn8ucTam9cFp4w_3)) { raiseOverflow(); 		};
		if (((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_3)) < ((NI)0) || ((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_3)) > ((NI)IL64(9223372036854775807))){ raiseRangeErrorI((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_3), ((NI)0), ((NI)IL64(9223372036854775807))); 		}
		copyMem__system_u1726(((void*) ((&(*dest_p0.p).data[dest_p0.len]))), ((void*) ((&(*src_p1.p).data[((NI)0)]))), ((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_3)));
		if (nimAddInt(dest_p0.len, src_p1.len, &TM__qDXzsifTQdn8ucTam9cFp4w_4)) { raiseOverflow(); 		};
		dest_p0.len = (NI)(TM__qDXzsifTQdn8ucTam9cFp4w_4);
}	}
LA3_: ;
}
N_LIB_PRIVATE N_NIMCALL(NimStringV2, alignString__pureZstrformat_u20)(NimStringV2 s_p0, NI minimumWidth_p1, NIM_CHAR align_p2, NIM_CHAR fill_p3) {
	NimStringV2 result;
	result.len = 0; result.p = NIM_NIL;
	{
		if (!(minimumWidth_p1 == ((NI)0))) goto LA3_;
{		eqcopy___system_u2609((*(&result)), s_p0);
}	}
	goto LA1_;
LA3_: ;
	{
		NI colontmpD_;
		NI colontmpD__2;
		NI T6_;
		NI TM__qDXzsifTQdn8ucTam9cFp4w_2;
		colontmpD_ = (NI)0;
		colontmpD__2 = (NI)0;
		T6_ = (NI)0;
		{
			auto T9_ = validateUtf8__pureZunicode_u7517(s_p0);
			if (!(T9_ == ((NI)-1))) goto LA10_;
{			colontmpD_ = runeLen__pureZunicode_u7345(s_p0);
			T6_ = colontmpD_;
}		}
		goto LA7_;
LA10_: ;
		{
			colontmpD__2 = s_p0.len;
			T6_ = colontmpD__2;
		}
LA7_: ;
		NI sRuneLen = T6_;
		if (nimSubInt(minimumWidth_p1, sRuneLen, &TM__qDXzsifTQdn8ucTam9cFp4w_2)) { raiseOverflow(); 		};
		NI toFill = (NI)(TM__qDXzsifTQdn8ucTam9cFp4w_2);
		{
			if (!(toFill <= ((NI)0))) goto LA15_;
{			eqcopy___system_u2609((*(&result)), s_p0);
}		}
		goto LA13_;
LA15_: ;
		{
			NIM_BOOL T18_;
			NimStringV2 colontmpD__3;
			NimStringV2 T22_;
			T18_ = (NIM_BOOL)0;
			T18_ = ((NU8)(align_p2) == (NU8)(60));
			if (T18_) goto LA19_;
			T18_ = ((NU8)(align_p2) == (NU8)(0));
LA19_: ;
			if (!T18_) goto LA20_;
{			colontmpD__3.len = 0; colontmpD__3.p = NIM_NIL;
			T22_.len = 0; T22_.p = NIM_NIL;
			if ((toFill) < ((NI)0) || (toFill) > ((NI)IL64(9223372036854775807))){ raiseRangeErrorI(toFill, ((NI)0), ((NI)IL64(9223372036854775807))); 			}
			colontmpD__3 = nsuRepeatChar(fill_p3, (toFill));
			T22_ = rawNewString(s_p0.len + colontmpD__3.len + 0);
appendString(T22_, s_p0);
appendString(T22_, colontmpD__3);
			result = T22_;
			if (colontmpD__3.p && !(colontmpD__3.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__3.p);
}
}		}
		goto LA13_;
LA20_: ;
		{
			NimStringV2 colontmpD__4;
			NimStringV2 colontmpD__5;
			NimStringV2 T26_;
			NI TM__qDXzsifTQdn8ucTam9cFp4w_5;
			if (!((NU8)(align_p2) == (NU8)(94))) goto LA24_;
{			colontmpD__4.len = 0; colontmpD__4.p = NIM_NIL;
			colontmpD__5.len = 0; colontmpD__5.p = NIM_NIL;
			NI half = (NI)((toFill) / (((NI)2)));
			T26_.len = 0; T26_.p = NIM_NIL;
			if ((half) < ((NI)0) || (half) > ((NI)IL64(9223372036854775807))){ raiseRangeErrorI(half, ((NI)0), ((NI)IL64(9223372036854775807))); 			}
			colontmpD__4 = nsuRepeatChar(fill_p3, (half));
			if (nimSubInt(toFill, half, &TM__qDXzsifTQdn8ucTam9cFp4w_5)) { raiseOverflow(); 			};
			if (((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_5)) < ((NI)0) || ((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_5)) > ((NI)IL64(9223372036854775807))){ raiseRangeErrorI((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_5), ((NI)0), ((NI)IL64(9223372036854775807))); 			}
			colontmpD__5 = nsuRepeatChar(fill_p3, ((NI)(TM__qDXzsifTQdn8ucTam9cFp4w_5)));
			T26_ = rawNewString(colontmpD__4.len + s_p0.len + colontmpD__5.len + 0);
appendString(T26_, colontmpD__4);
appendString(T26_, s_p0);
appendString(T26_, colontmpD__5);
			result = T26_;
			if (colontmpD__5.p && !(colontmpD__5.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__5.p);
}
			if (colontmpD__4.p && !(colontmpD__4.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__4.p);
}
}		}
		goto LA13_;
LA24_: ;
		{
			NimStringV2 colontmpD__6;
			NimStringV2 T28_;
			colontmpD__6.len = 0; colontmpD__6.p = NIM_NIL;
			T28_.len = 0; T28_.p = NIM_NIL;
			if ((toFill) < ((NI)0) || (toFill) > ((NI)IL64(9223372036854775807))){ raiseRangeErrorI(toFill, ((NI)0), ((NI)IL64(9223372036854775807))); 			}
			colontmpD__6 = nsuRepeatChar(fill_p3, (toFill));
			T28_ = rawNewString(colontmpD__6.len + s_p0.len + 0);
appendString(T28_, colontmpD__6);
appendString(T28_, s_p0);
			result = T28_;
			if (colontmpD__6.p && !(colontmpD__6.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__6.p);
}
		}
LA13_: ;
	}
LA1_: ;
	return result;
}
N_LIB_PRIVATE N_NIMCALL(void, formatValue__apiZcore_u28)(NimStringV2& result_p0, NimStringV2 value_p1) {
	NimStringV2 value_2;
	NimStringV2 colontmpD_;
	value_2.len = 0; value_2.p = NIM_NIL;
	colontmpD_.len = 0; colontmpD_.p = NIM_NIL;
	value_2 = value_p1;
	colontmpD_ = alignString__pureZstrformat_u20(value_2, ((NI)0), 0, 32);
	prepareAdd(result_p0, colontmpD_.len + 0);
appendString(result_p0, colontmpD_);
	if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
}
N_LIB_PRIVATE N_NIMCALL(void, formatValue__pkgZjson95serializationZreader95desc_u92)(NimStringV2& result_p0, NI value_p1) {
	NimStringV2 colontmpD_;
	colontmpD_.len = 0; colontmpD_.p = NIM_NIL;
	colontmpD_ = dollar___systemZdollars_u8(value_p1);
	prepareAdd(result_p0, colontmpD_.len + 0);
appendString(result_p0, colontmpD_);
	if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
}
N_LIB_PRIVATE N_NIMCALL(void, formatValue__pkgZjson95serializationZreader95desc_u214)(NimStringV2& result_p0, tyEnum_JsonValueKind__xMfZbK4rL9bzqYowFMHElsg value_p1) {
	NimStringV2 colontmpD_;
	colontmpD_.len = 0; colontmpD_.p = NIM_NIL;
	colontmpD_ = dollar___pkgZjson95serializationZtypes_u52(value_p1);
	formatValue__apiZcore_u28((*(&result_p0)), colontmpD_);
	if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
}
N_LIB_PRIVATE N_NIMCALL(void, formatValue__pkgZjson95serializationZreader95desc_u228)(NimStringV2& result_p0, tyEnum_ExpectedTokenCategory__53bzMm2xvlHkXC5lwfZCWQ value_p1) {
	NimStringV2 colontmpD_;
	colontmpD_.len = 0; colontmpD_.p = NIM_NIL;
	colontmpD_ = dollar___pkgZjson95serializationZreader95desc_u37(value_p1);
	formatValue__apiZcore_u28((*(&result_p0)), colontmpD_);
	if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
}
