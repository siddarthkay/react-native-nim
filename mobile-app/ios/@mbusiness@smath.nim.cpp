/* Generated by Nim Compiler v2.2.0 */
/* Compiled for: iOS, arm64, clang */
/* Command for C compiler:
   clang++ -c -std=gnu++17 -funsigned-char  -pthread -fPIC  -O3 -fno-ident  -fPIC  -I/opt/homebrew/Cellar/nim/2.2.0/nim/lib -I/Users/siddarthkumar/code/siddarthkay/react-native-nim/nim-core/src -o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@mbusiness@smath.nim.cpp.o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@mbusiness@smath.nim.cpp */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct tySequence__qwqHTkRvwhrRyENtudHQ7g;
struct tySequence__qwqHTkRvwhrRyENtudHQ7g_Content;
struct tySequence__qwqHTkRvwhrRyENtudHQ7g {
  NI len; tySequence__qwqHTkRvwhrRyENtudHQ7g_Content* p;
};
struct tySequence__qwqHTkRvwhrRyENtudHQ7g_Content { NI cap; NI data[SEQ_DECL_SIZE]; };
N_LIB_PRIVATE N_NIMCALL(NI, fibonacci__businessZmath_u1)(NI n_p0);
static N_INLINE(NIM_BOOL, nimSubInt)(NI a_p0, NI b_p1, NI* res_p2);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2);
N_LIB_PRIVATE N_NOINLINE(void, raiseDivByZero)(void);
N_LIB_PRIVATE N_NIMCALL(void*, newSeqPayload)(NI cap_p0, NI elemSize_p1, NI elemAlign_p2);
N_LIB_PRIVATE N_NIMCALL(void, add__businessZmath_u24)(tySequence__qwqHTkRvwhrRyENtudHQ7g& x_p0, NI y_p1);
static N_INLINE(NIM_BOOL, nimSubInt)(NI a_p0, NI b_p1, NI* res_p2) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	NI r = ((NI) ((NU)((NU64)(((NU) (a_p0))) - (NU64)(((NU) (b_p1))))));
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (((NI)0) <= (NI)(r ^ a_p0));
		if (T3_) goto LA4_;
		T3_ = (((NI)0) <= (NI)(r ^ (NI)((NU64) ~(b_p1))));
LA4_: ;
		if (!T3_) goto LA5_;
{		(*res_p2) = r;
}	}
	goto LA1_;
LA5_: ;
	{
		result = NIM_TRUE;
	}
LA1_: ;
	return result;
}
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	NI r = ((NI) ((NU)((NU64)(((NU) (a_p0))) + (NU64)(((NU) (b_p1))))));
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (((NI)0) <= (NI)(r ^ a_p0));
		if (T3_) goto LA4_;
		T3_ = (((NI)0) <= (NI)(r ^ b_p1));
LA4_: ;
		if (!T3_) goto LA5_;
{		(*res_p2) = r;
}	}
	goto LA1_;
LA5_: ;
	{
		result = NIM_TRUE;
	}
LA1_: ;
	return result;
}
N_LIB_PRIVATE N_NIMCALL(NI, fibonacci__businessZmath_u1)(NI n_p0) {
	NI result;
{	result = (NI)0;
	{
		if (!(n_p0 <= ((NI)1))) goto LA3_;
{		result = n_p0;
		goto BeforeRet_;
}	}
	goto LA1_;
LA3_: ;
	{
		NI TM__9ciCYqsvbBuWEFjXgB9bjk1w_2;
		NI TM__9ciCYqsvbBuWEFjXgB9bjk1w_3;
		NI TM__9ciCYqsvbBuWEFjXgB9bjk1w_4;
		if (nimSubInt(n_p0, ((NI)1), &TM__9ciCYqsvbBuWEFjXgB9bjk1w_2)) { raiseOverflow(); 		};
		auto T6_ = fibonacci__businessZmath_u1((NI)(TM__9ciCYqsvbBuWEFjXgB9bjk1w_2));
		if (nimSubInt(n_p0, ((NI)2), &TM__9ciCYqsvbBuWEFjXgB9bjk1w_3)) { raiseOverflow(); 		};
		auto T7_ = fibonacci__businessZmath_u1((NI)(TM__9ciCYqsvbBuWEFjXgB9bjk1w_3));
		if (nimAddInt(T6_, T7_, &TM__9ciCYqsvbBuWEFjXgB9bjk1w_4)) { raiseOverflow(); 		};
		result = (NI)(TM__9ciCYqsvbBuWEFjXgB9bjk1w_4);
		goto BeforeRet_;
	}
LA1_: ;
	}BeforeRet_: ;
	return result;
}
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPrime__businessZmath_u4)(NI n_p0) {
	NIM_BOOL result;
{	{
		if (!(n_p0 < ((NI)2))) goto LA3_;
{		result = NIM_FALSE;
		goto BeforeRet_;
}	}
LA3_: ;
	{
		NI i;
		NI colontmp_;
		i = (NI)0;
		colontmp_ = (NI)0;
		colontmp_ = (NI)((n_p0) / (((NI)2)));
		NI res = ((NI)2);
		{
			while (1) {
				NI TM__9ciCYqsvbBuWEFjXgB9bjk1w_6;
				if (!(res <= colontmp_)) goto LA7;
				i = ((NI) (res));
				{
					NI TM__9ciCYqsvbBuWEFjXgB9bjk1w_5;
					if (i == 0){ raiseDivByZero(); 					}
					if (nimModInt(n_p0, i, &TM__9ciCYqsvbBuWEFjXgB9bjk1w_5)) { raiseOverflow(); 					};
					if (!((NI)(TM__9ciCYqsvbBuWEFjXgB9bjk1w_5) == ((NI)0))) goto LA10_;
{					result = NIM_FALSE;
					goto BeforeRet_;
}				}
LA10_: ;
				if (nimAddInt(res, ((NI)1), &TM__9ciCYqsvbBuWEFjXgB9bjk1w_6)) { raiseOverflow(); 				};
				res = (NI)(TM__9ciCYqsvbBuWEFjXgB9bjk1w_6);
			} LA7: ;
		}
	}
	result = NIM_TRUE;
	goto BeforeRet_;
	}BeforeRet_: ;
	return result;
}
N_LIB_PRIVATE N_NIMCALL(tySequence__qwqHTkRvwhrRyENtudHQ7g, factorize__businessZmath_u12)(NI n_p0) {
	tySequence__qwqHTkRvwhrRyENtudHQ7g result;
	result.len = 0; result.p = (tySequence__qwqHTkRvwhrRyENtudHQ7g_Content*) newSeqPayload(0, sizeof(NI), NIM_ALIGNOF(NI));
	{
		NI i;
		i = (NI)0;
		NI res = ((NI)1);
		{
			while (1) {
				NI TM__9ciCYqsvbBuWEFjXgB9bjk1w_8;
				if (!(res <= n_p0)) goto LA3;
				i = ((NI) (res));
				{
					NI TM__9ciCYqsvbBuWEFjXgB9bjk1w_7;
					if (i == 0){ raiseDivByZero(); 					}
					if (nimModInt(n_p0, i, &TM__9ciCYqsvbBuWEFjXgB9bjk1w_7)) { raiseOverflow(); 					};
					if (!((NI)(TM__9ciCYqsvbBuWEFjXgB9bjk1w_7) == ((NI)0))) goto LA6_;
{					add__businessZmath_u24((*(&result)), i);
}				}
LA6_: ;
				if (nimAddInt(res, ((NI)1), &TM__9ciCYqsvbBuWEFjXgB9bjk1w_8)) { raiseOverflow(); 				};
				res = (NI)(TM__9ciCYqsvbBuWEFjXgB9bjk1w_8);
			} LA3: ;
		}
	}
	return result;
}
