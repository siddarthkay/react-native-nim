/* Generated by Nim Compiler v2.2.0 */
/* Compiled for: iOS, arm64, clang */
/* Command for C compiler:
   clang++ -c -std=gnu++17 -funsigned-char  -pthread -fPIC  -O3 -fno-ident  -fPIC  -I/opt/homebrew/Cellar/nim/2.2.0/nim/lib -I/Users/siddarthkumar/code/siddarthkay/react-native-nim/nim-core/src -o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@spure@smemfiles.nim.cpp.o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@spure@smemfiles.nim.cpp */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#include <sys/mman.h>
#include <unistd.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct tyObject_MemFile__PFBjP9awUV6z9boIJnwE9cUJQ;
struct NimStrPayload;
struct NimStringV2;
struct tyObject_MemFile__PFBjP9awUV6z9boIJnwE9cUJQ {
	void* mem;
	NI size;
	int handle;
	int flags;
};
struct NimStrPayload {
	NI cap;
	NIM_CHAR data[SEQ_DECL_SIZE];
};
struct NimStringV2 {
	NI len;
	NimStrPayload* p;
};
N_LIB_PRIVATE N_NIMCALL(NI32, osLastError__stdZoserrors_u99)(void);
N_LIB_PRIVATE N_NOINLINE(void, raiseOSError__stdZoserrors_u96)(NI32 errorCode_p0, NimStringV2 additionalInfo_p1);
static const struct {
  NI cap; NIM_CHAR data[0+1];
} TM__mFfhe8Jm7Jqn2Znr3841fw_2 = { 0 | NIM_STRLIT_FLAG, "" };
static const NimStringV2 TM__mFfhe8Jm7Jqn2Znr3841fw_3 = {0, (NimStrPayload*)&TM__mFfhe8Jm7Jqn2Znr3841fw_2};
N_LIB_PRIVATE N_NIMCALL(void, close__pureZmemfiles_u208)(tyObject_MemFile__PFBjP9awUV6z9boIJnwE9cUJQ& f_p0) {
	NI32 lastErr;
	NIM_BOOL error = NIM_FALSE;
	lastErr = (NI32)0;
	auto T1_ = munmap(f_p0.mem, f_p0.size);
	error = !((T1_ == ((NI32)0)));
	lastErr = osLastError__stdZoserrors_u99();
	{
		NIM_BOOL T6_;
		int T7_;
		if (!!((f_p0.handle == ((NI32)-1)))) goto LA4_;
{		T6_ = (NIM_BOOL)0;
		T7_ = (int)0;
		T7_ = close(f_p0.handle);
		T6_ = !((T7_ == ((NI32)0)));
		if (T6_) goto LA8_;
		T6_ = error;
LA8_: ;
		error = T6_;
}	}
LA4_: ;
	f_p0.size = ((NI)0);
	f_p0.mem = NIM_NIL;
	f_p0.handle = ((int)-1);
	{
		if (!error) goto LA11_;
{		raiseOSError__stdZoserrors_u96(lastErr, TM__mFfhe8Jm7Jqn2Znr3841fw_3);
}	}
LA11_: ;
}
