/* Generated by Nim Compiler v2.2.0 */
/* Compiled for: iOS, arm64, clang */
/* Command for C compiler:
   clang++ -c -std=gnu++17 -funsigned-char  -pthread -fPIC  -O3 -fno-ident  -fPIC  -I/opt/homebrew/Cellar/nim/2.2.0/nim/lib -I/Users/siddarthkumar/code/siddarthkay/react-native-nim/nim-core/src -o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@ssystem@sdollars.nim.cpp.o /Users/siddarthkumar/code/siddarthkay/react-native-nim/bindings/ios/@m..@s..@s..@s..@s..@s..@s..@sopt@shomebrew@sCellar@snim@s2.2.0@snim@slib@ssystem@sdollars.nim.cpp */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct NimStrPayload;
struct NimStringV2;
struct NimStrPayload {
	NI cap;
	NIM_CHAR data[SEQ_DECL_SIZE];
};
struct NimStringV2 {
	NI len;
	NimStrPayload* p;
};
N_LIB_PRIVATE N_NIMCALL(void, addInt__stdZprivateZdigitsutils_u178)(NimStringV2& result_p0, NI64 x_p1);
static N_INLINE(void, addInt__stdZprivateZdigitsutils_u195)(NimStringV2& result_p0, NI x_p1);
N_LIB_PRIVATE N_NIMCALL(void, addInt__stdZprivateZdigitsutils_u175)(NimStringV2& result_p0, NU64 x_p1);
static N_INLINE(void, addInt__stdZprivateZdigitsutils_u195)(NimStringV2& result_p0, NI x_p1) {
	addInt__stdZprivateZdigitsutils_u178((*(&result_p0)), ((NI64) (x_p1)));
}
N_LIB_PRIVATE N_NIMCALL(NimStringV2, dollar___systemZdollars_u8)(NI x_p0) {
	NimStringV2 result;
	result.len = 0; result.p = NIM_NIL;
	addInt__stdZprivateZdigitsutils_u195((*(&result)), x_p0);
	return result;
}
N_LIB_PRIVATE N_NIMCALL(NimStringV2, dollar___systemZdollars_u11)(NI64 x_p0) {
	NimStringV2 result;
	result.len = 0; result.p = NIM_NIL;
	addInt__stdZprivateZdigitsutils_u178((*(&result)), x_p0);
	return result;
}
N_LIB_PRIVATE N_NIMCALL(NimStringV2, dollar___systemZdollars_u14)(NU64 x_p0) {
	NimStringV2 result;
	result.len = 0; result.p = NIM_NIL;
	addInt__stdZprivateZdigitsutils_u175((*(&result)), x_p0);
	return result;
}
