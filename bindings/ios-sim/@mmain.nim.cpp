/* Generated by Nim Compiler v2.2.0 */
/* Compiled for: iOS, arm64, clang */
/* Command for C compiler:
   clang++ -c -std=gnu++17 -funsigned-char  -pthread -fPIC  -O3 -fno-ident  -fPIC  -I/opt/homebrew/Cellar/nim/2.2.0/nim/lib -I/Users/siddarthkumar/code/siddarthkay/nim-rn-monorepo/nim-core/src -o /Users/siddarthkumar/code/siddarthkay/nim-rn-monorepo/bindings/ios-sim/@mmain.nim.cpp.o /Users/siddarthkumar/code/siddarthkay/nim-rn-monorepo/bindings/ios-sim/@mmain.nim.cpp */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
extern "C" N_LIB_EXPORT N_CDECL(NCSTRING, getNimCoreVersion)(void);
extern "C" N_LIB_EXPORT N_CDECL(void, NimMain)(void);
N_LIB_PRIVATE N_NIMCALL(void, atmdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsoptatshomebrewatsCellaratsnimats2dot2dot0atsnimatslibatssystematsexceptionsdotnim_DatInit000)(void);
N_LIB_PRIVATE N_NIMCALL(void, atmdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsoptatshomebrewatsCellaratsnimats2dot2dot0atsnimatslibatssystemdotnim_Init000)(void);
N_LIB_PRIVATE N_NIMCALL(void, NimMainModule)(void);
N_LIB_EXPORT N_CDECL(NCSTRING, getNimCoreVersion)(void) {
	NCSTRING result;
{	result = "1.0.0";
	goto BeforeRet_;
	}BeforeRet_: ;
	return result;
}
N_LIB_EXPORT N_CDECL(void, NimMain)(void) {
}
N_LIB_EXPORT N_CDECL(void, NimDestroyGlobals)(void) {
}

N_LIB_PRIVATE void PreMainInner(void) {
}

N_LIB_PRIVATE void PreMain(void) {
#if 0
	void (*volatile inner)(void);
	inner = PreMainInner;
	atmdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsoptatshomebrewatsCellaratsnimats2dot2dot0atsnimatslibatssystematsexceptionsdotnim_DatInit000();
	atmdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsoptatshomebrewatsCellaratsnimats2dot2dot0atsnimatslibatssystemdotnim_Init000();
	(*inner)();
#else
	atmdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsoptatshomebrewatsCellaratsnimats2dot2dot0atsnimatslibatssystematsexceptionsdotnim_DatInit000();
	atmdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsdotdotatsoptatshomebrewatsCellaratsnimats2dot2dot0atsnimatslibatssystemdotnim_Init000();
	PreMainInner();
#endif
}

N_LIB_PRIVATE N_CDECL(void, NimMainInner)(void) {
	NimMainModule();
}

N_LIB_EXPORT N_CDECL(void, NimMain)(void) {
#if 0
	void (*volatile inner)(void);
	PreMain();
	inner = NimMainInner;
	(*inner)();
#else
	PreMain();
	NimMainInner();
#endif
}

N_LIB_PRIVATE N_NIMCALL(void, NimMainModule)(void) {
{
}
}

