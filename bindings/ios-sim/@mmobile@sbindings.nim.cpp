/* Generated by Nim Compiler v2.2.0 */
/* Compiled for: iOS, arm64, clang */
/* Command for C compiler:
   clang++ -c -std=gnu++17 -funsigned-char  -pthread -fPIC  -O3 -fno-ident  -fPIC  -I/opt/homebrew/Cellar/nim/2.2.0/nim/lib -I/Users/siddarthkumar/code/siddarthkay/nim-rn-monorepo/nim-core/src -o /Users/siddarthkumar/code/siddarthkay/nim-rn-monorepo/bindings/ios-sim/@mmobile@sbindings.nim.cpp.o /Users/siddarthkumar/code/siddarthkay/nim-rn-monorepo/bindings/ios-sim/@mmobile@sbindings.nim.cpp */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#include <exception>
#include <string.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct tySequence__qwqHTkRvwhrRyENtudHQ7g;
struct tySequence__qwqHTkRvwhrRyENtudHQ7g_Content;
struct NimStrPayload;
struct NimStringV2;
struct Exception;
struct RootObj;
struct TNimTypeV2;
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ;
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ_Content;
struct tyObject_User__1cClnvPRRihQtE9bNVnYlnA;
struct tyObject_StackTraceEntry__XJPlpMU9cDRJgRZvaiJYQVA;
struct tySequence__qwqHTkRvwhrRyENtudHQ7g {
  NI len; tySequence__qwqHTkRvwhrRyENtudHQ7g_Content* p;
};
struct NimStrPayload {
	NI cap;
	NIM_CHAR data[SEQ_DECL_SIZE];
};
struct NimStringV2 {
	NI len;
	NimStrPayload* p;
};
struct TNimTypeV2 {
	void* destructor;
	NI size;
	NI16 align;
	NI16 depth;
	NU32* display;
	void* traceImpl;
	void* typeInfoV1;
	NI flags;
	void** vTable;
};
struct RootObj {
	TNimTypeV2* m_type;
};
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ {
  NI len; tySequence__U3NvoVpKEobw8JVQGjnwkQ_Content* p;
};
struct Exception : public RootObj {
	Exception* parent;
	NCSTRING name;
	NimStringV2 message;
	tySequence__U3NvoVpKEobw8JVQGjnwkQ trace;
	Exception* up;
};
struct tyObject_User__1cClnvPRRihQtE9bNVnYlnA {
	NI id;
	NimStringV2 name;
	NimStringV2 email;
	NIM_BOOL active;
};
struct tySequence__qwqHTkRvwhrRyENtudHQ7g_Content { NI cap; NI data[SEQ_DECL_SIZE]; };
struct tyObject_StackTraceEntry__XJPlpMU9cDRJgRZvaiJYQVA {
	NCSTRING procname;
	NI line;
	NCSTRING filename;
};
struct tySequence__U3NvoVpKEobw8JVQGjnwkQ_Content { NI cap; tyObject_StackTraceEntry__XJPlpMU9cDRJgRZvaiJYQVA data[SEQ_DECL_SIZE]; };
extern "C" N_LIB_EXPORT N_CDECL(int, mobileFibonacci)(int n_p0);
N_LIB_PRIVATE N_NIMCALL(NI, fibonacci__businessZmath_u1)(NI n_p0);
N_LIB_PRIVATE N_NOINLINE(void, raiseRangeErrorI)(NI64 i_p0, NI64 a_p1, NI64 b_p2);
extern "C" N_LIB_EXPORT N_CDECL(int, mobileIsPrime)(int n_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPrime__businessZmath_u4)(NI n_p0);
extern "C" N_LIB_EXPORT N_CDECL(NCSTRING, mobileFactorize)(int n_p0);
N_LIB_PRIVATE N_NIMCALL(tySequence__qwqHTkRvwhrRyENtudHQ7g, factorize__businessZmath_u12)(NI n_p0);
N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError2)(NI i_p0, NI n_p1);
static N_INLINE(void, appendString)(NimStringV2& dest_p0, NimStringV2 src_p1);
static N_INLINE(void, copyMem__system_u1726)(void* dest_p0, void* source_p1, NI size_p2);
static N_INLINE(void, nimCopyMem)(void* dest_p0, void* source_p1, NI size_p2);
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
N_LIB_PRIVATE N_NIMCALL(void, prepareAdd)(NimStringV2& s_p0, NI addLen_p1);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, dollar___systemZdollars_u8)(NI x_p0);
N_LIB_PRIVATE N_NIMCALL(void, failedAssertImpl__stdZassertions_u203)(NimStringV2 msg_p0);
N_LIB_PRIVATE N_NOCONV(void, deallocShared)(void* p_p0);
static N_INLINE(NCSTRING, nimToCStringConv)(NimStringV2 s_p0);
N_LIB_PRIVATE N_NIMCALL(void, eqdestroy___businessZmath_u52)(tySequence__qwqHTkRvwhrRyENtudHQ7g dest_p0);
extern "C" N_LIB_EXPORT N_CDECL(NCSTRING, mobileCreateUser)(int id_p0, NCSTRING name_p1, NCSTRING email_p2);
static N_INLINE(void, nimZeroMem)(void* p_p0, NI size_p1);
static N_INLINE(void, nimSetMem__systemZmemory_u7)(void* a_p0, int v_p1, NI size_p2);
N_LIB_PRIVATE N_NIMCALL(void, createUser__businessZdata_u9)(NI id_p0, NimStringV2 name_p1, NimStringV2 email_p2, tyObject_User__1cClnvPRRihQtE9bNVnYlnA* Result);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, cstrToNimstr)(NCSTRING str_p0);
N_LIB_PRIVATE N_NIMCALL(NimStringV2, userToJson__businessZdata_u35)(tyObject_User__1cClnvPRRihQtE9bNVnYlnA* user_p0);
N_LIB_PRIVATE N_NIMCALL(void, eqdestroy___businessZdata_u17)(tyObject_User__1cClnvPRRihQtE9bNVnYlnA& dest_p0);
extern "C" N_LIB_EXPORT N_CDECL(int, mobileValidateEmail)(NCSTRING email_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, validateEmail__businessZdata_u125)(NimStringV2 email_p0);
extern "C" N_LIB_EXPORT N_CDECL(void, mobileNimInit)(void);
extern "C" N_LIB_EXPORT N_CDECL(void, mobileNimShutdown)(void);
static const struct {
  NI cap; NIM_CHAR data[0+1];
} TM__jb7Dj3CYlufC9aDXaF9awgtg_2 = { 0 | NIM_STRLIT_FLAG, "" };
static const NimStringV2 TM__jb7Dj3CYlufC9aDXaF9awgtg_3 = {0, (NimStrPayload*)&TM__jb7Dj3CYlufC9aDXaF9awgtg_2};
static const struct {
  NI cap; NIM_CHAR data[1+1];
} TM__jb7Dj3CYlufC9aDXaF9awgtg_4 = { 1 | NIM_STRLIT_FLAG, "," };
static const NimStringV2 TM__jb7Dj3CYlufC9aDXaF9awgtg_5 = {1, (NimStrPayload*)&TM__jb7Dj3CYlufC9aDXaF9awgtg_4};
static const struct {
  NI cap; NIM_CHAR data[90+1];
} TM__jb7Dj3CYlufC9aDXaF9awgtg_8 = { 90 | NIM_STRLIT_FLAG, "iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it" };
static const NimStringV2 TM__jb7Dj3CYlufC9aDXaF9awgtg_9 = {90, (NimStrPayload*)&TM__jb7Dj3CYlufC9aDXaF9awgtg_8};
N_LIB_EXPORT N_CDECL(int, mobileFibonacci)(int n_p0) {
	int result;
{	result = (int)0;
	auto T1_ = fibonacci__businessZmath_u1(((NI) (n_p0)));
	if ((T1_) < ((int)(-2147483647 -1)) || (T1_) > ((int)2147483647)){ raiseRangeErrorI(T1_, ((int)(-2147483647 -1)), ((int)2147483647)); 	}
	result = ((int) (T1_));
	goto BeforeRet_;
	}BeforeRet_: ;
	return result;
}
N_LIB_EXPORT N_CDECL(int, mobileIsPrime)(int n_p0) {
	int result;
	int colontmpD_;
	int colontmpD__2;
{	colontmpD_ = (int)0;
	colontmpD__2 = (int)0;
	{
		auto T3_ = isPrime__businessZmath_u4(((NI) (n_p0)));
		if (!T3_) goto LA4_;
{		colontmpD_ = ((int)1);
		result = colontmpD_;
}	}
	goto LA1_;
LA4_: ;
	{
		colontmpD__2 = ((int)0);
		result = colontmpD__2;
	}
LA1_: ;
	goto BeforeRet_;
	}BeforeRet_: ;
	return result;
}
static N_INLINE(void, nimCopyMem)(void* dest_p0, void* source_p1, NI size_p2) {
	auto T1_ = memcpy(dest_p0, source_p1, ((size_t) (size_p2)));
}
static N_INLINE(void, copyMem__system_u1726)(void* dest_p0, void* source_p1, NI size_p2) {
	nimCopyMem(dest_p0, source_p1, size_p2);
}
static N_INLINE(NIM_BOOL, nimAddInt)(NI a_p0, NI b_p1, NI* res_p2) {
	NIM_BOOL result;
	result = (NIM_BOOL)0;
	NI r = ((NI) ((NU)((NU64)(((NU) (a_p0))) + (NU64)(((NU) (b_p1))))));
	{
		NIM_BOOL T3_;
		T3_ = (NIM_BOOL)0;
		T3_ = (((NI)0) <= (NI)(r ^ a_p0));
		if (T3_) goto LA4_;
		T3_ = (((NI)0) <= (NI)(r ^ b_p1));
LA4_: ;
		if (!T3_) goto LA5_;
{		(*res_p2) = r;
}	}
	goto LA1_;
LA5_: ;
	{
		result = NIM_TRUE;
	}
LA1_: ;
	return result;
}
static N_INLINE(void, appendString)(NimStringV2& dest_p0, NimStringV2 src_p1) {
	{
		NI TM__jb7Dj3CYlufC9aDXaF9awgtg_6;
		NI TM__jb7Dj3CYlufC9aDXaF9awgtg_7;
		if (!(((NI)0) < src_p1.len)) goto LA3_;
{		if (nimAddInt(src_p1.len, ((NI)1), &TM__jb7Dj3CYlufC9aDXaF9awgtg_6)) { raiseOverflow(); 		};
		if (((NI)(TM__jb7Dj3CYlufC9aDXaF9awgtg_6)) < ((NI)0) || ((NI)(TM__jb7Dj3CYlufC9aDXaF9awgtg_6)) > ((NI)IL64(9223372036854775807))){ raiseRangeErrorI((NI)(TM__jb7Dj3CYlufC9aDXaF9awgtg_6), ((NI)0), ((NI)IL64(9223372036854775807))); 		}
		copyMem__system_u1726(((void*) ((&(*dest_p0.p).data[dest_p0.len]))), ((void*) ((&(*src_p1.p).data[((NI)0)]))), ((NI)(TM__jb7Dj3CYlufC9aDXaF9awgtg_6)));
		if (nimAddInt(dest_p0.len, src_p1.len, &TM__jb7Dj3CYlufC9aDXaF9awgtg_7)) { raiseOverflow(); 		};
		dest_p0.len = (NI)(TM__jb7Dj3CYlufC9aDXaF9awgtg_7);
}	}
LA3_: ;
}
static N_INLINE(NCSTRING, nimToCStringConv)(NimStringV2 s_p0) {
	NCSTRING result;
	{
		if (!(s_p0.len == ((NI)0))) goto LA3_;
{		result = "";
}	}
	goto LA1_;
LA3_: ;
	{
		result = ((NCSTRING) ((*s_p0.p).data));
	}
LA1_: ;
	return result;
}
N_LIB_EXPORT N_CDECL(NCSTRING, mobileFactorize)(int n_p0) {
	NCSTRING result;
	tySequence__qwqHTkRvwhrRyENtudHQ7g factors;
	NimStringV2 result_2;
	std::exception_ptr T2_;
{	result = (NCSTRING)0;
	factors.len = 0; factors.p = NIM_NIL;
	result_2.len = 0; result_2.p = NIM_NIL;
	try {
	factors = factorize__businessZmath_u12(((NI) (n_p0)));
	result_2 = TM__jb7Dj3CYlufC9aDXaF9awgtg_3;
	{
		NI i;
		NI factor;
		NI T4_;
		i = (NI)0;
		factor = (NI)0;
		NI i_2 = ((NI)0);
		T4_ = factors.len;
		NI L = T4_;
		{
			while (1) {
				NimStringV2 colontmpD_;
				if (!(i_2 < L)) goto LA6;
				colontmpD_.len = 0; colontmpD_.p = NIM_NIL;
				i = i_2;
				if (i_2 < 0 || i_2 >= factors.len){ raiseIndexError2(i_2,factors.len-1); 				}
				factor = factors.p->data[i_2];
				{
					if (!(((NI)0) < i)) goto LA9_;
{					prepareAdd(result_2, 1);
appendString(result_2, TM__jb7Dj3CYlufC9aDXaF9awgtg_5);
}				}
LA9_: ;
				colontmpD_ = dollar___systemZdollars_u8(factor);
				prepareAdd(result_2, colontmpD_.len + 0);
appendString(result_2, colontmpD_);
				i_2 += ((NI)1);
				{
					NI T13_;
					T13_ = factors.len;
					if (!!((T13_ == L))) goto LA14_;
{					failedAssertImpl__stdZassertions_u203(TM__jb7Dj3CYlufC9aDXaF9awgtg_9);
}				}
LA14_: ;
				if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
			} LA6: ;
		}
	}
	result = nimToCStringConv(result_2);
	if (result_2.p && !(result_2.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(result_2.p);
}
	eqdestroy___businessZmath_u52(factors);
	goto BeforeRet_;
	}
	catch (Exception* T3_) {
	T2_ = std::current_exception();
	}
	catch (...) {
		T2_ = std::current_exception();
	}
	{
		if (result_2.p && !(result_2.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(result_2.p);
}
		eqdestroy___businessZmath_u52(factors);
		if (T2_) std::rethrow_exception(T2_);
	}
	}BeforeRet_: ;
	return result;
}
static N_INLINE(void, nimSetMem__systemZmemory_u7)(void* a_p0, int v_p1, NI size_p2) {
	auto T1_ = memset(a_p0, v_p1, ((size_t) (size_p2)));
}
static N_INLINE(void, nimZeroMem)(void* p_p0, NI size_p1) {
	nimSetMem__systemZmemory_u7(p_p0, ((int)0), size_p1);
}
N_LIB_EXPORT N_CDECL(NCSTRING, mobileCreateUser)(int id_p0, NCSTRING name_p1, NCSTRING email_p2) {
	NCSTRING result;
	tyObject_User__1cClnvPRRihQtE9bNVnYlnA user;
	NimStringV2 colontmpD_;
	NimStringV2 colontmpD__2;
	NimStringV2 colontmpD__3;
	std::exception_ptr T2_;
{	result = (NCSTRING)0;
	nimZeroMem((void*)(&user), sizeof(tyObject_User__1cClnvPRRihQtE9bNVnYlnA));
	colontmpD_.len = 0; colontmpD_.p = NIM_NIL;
	colontmpD__2.len = 0; colontmpD__2.p = NIM_NIL;
	colontmpD__3.len = 0; colontmpD__3.p = NIM_NIL;
	try {
	colontmpD_ = cstrToNimstr((NCSTRING) name_p1);
	colontmpD__2 = cstrToNimstr((NCSTRING) email_p2);
	createUser__businessZdata_u9(((NI) (id_p0)), colontmpD_, colontmpD__2, (&user));
	colontmpD__3 = userToJson__businessZdata_u35((&user));
	result = nimToCStringConv(colontmpD__3);
	if (colontmpD__3.p && !(colontmpD__3.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__3.p);
}
	if (colontmpD__2.p && !(colontmpD__2.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__2.p);
}
	if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
	eqdestroy___businessZdata_u17((*(&user)));
	goto BeforeRet_;
	}
	catch (Exception* T3_) {
	T2_ = std::current_exception();
	}
	catch (...) {
		T2_ = std::current_exception();
	}
	{
		if (colontmpD__3.p && !(colontmpD__3.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__3.p);
}
		if (colontmpD__2.p && !(colontmpD__2.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD__2.p);
}
		if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
		eqdestroy___businessZdata_u17((*(&user)));
		if (T2_) std::rethrow_exception(T2_);
	}
	}BeforeRet_: ;
	return result;
}
N_LIB_EXPORT N_CDECL(int, mobileValidateEmail)(NCSTRING email_p0) {
	int result;
	NimStringV2 colontmpD_;
	int colontmpD__2;
	int colontmpD__3;
	std::exception_ptr T2_;
{	result = (int)0;
	colontmpD_.len = 0; colontmpD_.p = NIM_NIL;
	colontmpD__2 = (int)0;
	colontmpD__3 = (int)0;
	try {
	{
		colontmpD_ = cstrToNimstr((NCSTRING) email_p0);
		auto T5_ = validateEmail__businessZdata_u125(colontmpD_);
		if (!T5_) goto LA6_;
{		colontmpD__2 = ((int)1);
		result = colontmpD__2;
}	}
	goto LA3_;
LA6_: ;
	{
		colontmpD__3 = ((int)0);
		result = colontmpD__3;
	}
LA3_: ;
	if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
	goto BeforeRet_;
	}
	catch (Exception* T3_) {
	T2_ = std::current_exception();
	}
	catch (...) {
		T2_ = std::current_exception();
	}
	{
		if (colontmpD_.p && !(colontmpD_.p->cap & NIM_STRLIT_FLAG)) {
 deallocShared(colontmpD_.p);
}
		if (T2_) std::rethrow_exception(T2_);
	}
	}BeforeRet_: ;
	return result;
}
N_LIB_EXPORT N_CDECL(void, mobileNimInit)(void) {
}
N_LIB_EXPORT N_CDECL(void, mobileNimShutdown)(void) {
}
